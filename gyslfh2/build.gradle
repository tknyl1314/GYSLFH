apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'bugly'
//GreenDao
apply plugin: 'org.greenrobot.greendao' // apply plugin
bugly {
    appId = '900039321'
    appKey = 'kozvXy6ebYMzgmfw'
    execute = true
    upload = true
    /*
除了appId和appKey之外，还可以设置其他属性，属性列表如下：
属性	值	说明
appId	String	App ID
appKey	String	App Key
execute	boolean	插件开关
upload	boolean	上传开关
outputDir	String	符号表文件输出路径
 */
}
android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
    //aaptOptions.cruncherEnabled = false
    //aaptOptions.useNewCruncher = false


    defaultConfig {
        applicationId "com.titan.newslfh"
        minSdkVersion 19  //18 Andoird 4.3 野狗要求4.4以上
        targetSdkVersion 23//百度导航要求
        versionCode 1
        versionName "2.0"
        manifestPlaceholders = [
                GETUI_APP_ID    : "gJPwaKTz0V9HzcQnR6Zp43",
                GETUI_APP_KEY   : "Xzi2FrT2Wf7Ovzs3qm8bN2",
                GETUI_APP_SECRET: "bw2Ob8b07y95dChJxiD2q3"
        ]

        //向上兼容矢量动画
        vectorDrawables.useSupportLibrary = true

        //Enabling multidex support.
        multiDexEnabled true
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a', 'armeabi', 'x86'
            //abiFilters  'armeabi'
            // 'armeabi','x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }



    greendao {
        //当前数据库版本
        schemaVersion 4
        //由GreenDao自动生成代码所在的包名，默认的是在项目包下面新建一个gen。
        daoPackage 'com.titan.data.greendao'
        //设置自动生成代码的目录
        targetGenDir 'src/main/java'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            res.srcDirs = ['src/main/res', 'src/main/res/menu']
        }
    }
    repositories {
        jcenter()

    }
    dataBinding {
        enabled = true
    }
    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/notice'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/rxjava.properties'
    }
    signingConfigs {
        //签名的配置
        release {
            storeFile file("Titan.jks")
            storePassword '123123'
            keyAlias 'titan打包'
            keyPassword '123123'
        }
    }
    buildTypes {
        release {
            shrinkResources false//去除不用的资源文件
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                if (variant.buildType.name.equals('release')) {
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            def fileName = "GYSLFH_${releaseTime()}_${defaultConfig.versionName}_release.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }
        debug {
            shrinkResources false//去除不用的资源文件
            minifyEnabled false  //是否混淆  Android Studio disables ProGuard when using Instant Run.
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                if (variant.buildType.name.equals('debug')) {
                    variant.outputs.each { output -> def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            def fileName = "GYSLFH_${releaseTime()}_${defaultConfig.versionName}_debug.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }

        }
    }
    lintOptions {
        //设置编译的lint开关，程序在buid的时候，会执行lint检查，有任何的错误或者警告提示，都会终止构建
        abortOnError false
    }

    /*externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }*/
}
/*kapt {
    generateStubs = true
}*/

dependencies {
    //compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    /**个推*/
    //compile 'com.getui:sdk:2.10.2.0'
    compile files('libs/GetuiSDK2.10.2.0.jar')
    /** Spatialite*/
    //compile files('libs/spatialite-android-library.jar')
    /**海康*/
    compile files('libs/AudioEngineSDK.jar')
    compile files('libs/HCNetSDK.jar')
    compile files('libs/PlayerSDK.jar')
    compile files('libs/jedis-2.8.1.jar')
    //compile 'com.android.support.constraint:constraint-layout:1.0.2'
    /**测试框架*/
    // Dependencies for Android unit tests
    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
    testCompile "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockito"
    testCompile "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito"

    /**kotlin*/
    //compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //kapt 'com.android.databinding:compiler:2.3.2'

    //compile 'com.squareup:kotlinpoet:0.3.0'
    /** */
    compile 'com.android.support:multidex:1.0.2'
    androidTestCompile 'com.android.support:multidex:1.0.2'
    androidTestCompile 'com.android.support:multidex-instrumentation:1.0.2'
    testCompile 'com.android.support:multidex:1.0.2'
    compile 'com.afollestad.material-dialogs:core:0.9.4.5'
    compile 'com.jzxiang.pickerview:TimePickerDialog:1.0.1'
    compile 'com.github.wuhongsheng:TitanLib:0.4.3'
    //noinspection GradleCompatible
    compile 'com.android.support:support-v4:25.3.1'
    /**PermissionsDispatcher*/
    compile("com.github.hotchemi:permissionsdispatcher:2.4.0") {
        // if you don't use android.app.Fragment you can exclude support for them
        //exclude module: "support-v13"
    }
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.4.0'
    /**野狗视频通话*/
    //compile 'com.wilddog.client:wilddog-video-call-android:2.2.0'
    compile('com.wilddog.client:wilddog-video-room-android:2.1.0-beta') {
        exclude group: "com.squareup.okhttp3", module: "okhttp"
    }
    configurations{compile.exclude group:"org.json",module:"json"}
    compile 'com.wilddog.client:wilddog-auth-android:2.0.6'


}

/**
 * @return
 */
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+08"))
}
